// <auto-generated />
using System;
using AppReservasBio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppReservasBio.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250618203457_CorreccionErrores")]
    partial class CorreccionErrores
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppReservasBio.Models.Docente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("AppReservasBio.Models.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreLaboratorio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("AppReservasBio.Models.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("AppReservasBio.Models.Laboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Laboratorios");
                });

            modelBuilder.Entity("AppReservasBio.Models.ModuloHorario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModulosHorario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HoraFin = new TimeSpan(0, 8, 0, 0, 0),
                            HoraInicio = new TimeSpan(0, 7, 0, 0, 0),
                            Nombre = "07:00 - 08:00"
                        },
                        new
                        {
                            Id = 2,
                            HoraFin = new TimeSpan(0, 9, 5, 0, 0),
                            HoraInicio = new TimeSpan(0, 8, 5, 0, 0),
                            Nombre = "08:05 - 09:05"
                        },
                        new
                        {
                            Id = 3,
                            HoraFin = new TimeSpan(0, 10, 10, 0, 0),
                            HoraInicio = new TimeSpan(0, 9, 10, 0, 0),
                            Nombre = "09:10 - 10:10"
                        },
                        new
                        {
                            Id = 4,
                            HoraFin = new TimeSpan(0, 11, 15, 0, 0),
                            HoraInicio = new TimeSpan(0, 10, 15, 0, 0),
                            Nombre = "10:15 - 11:15"
                        },
                        new
                        {
                            Id = 5,
                            HoraFin = new TimeSpan(0, 12, 20, 0, 0),
                            HoraInicio = new TimeSpan(0, 11, 20, 0, 0),
                            Nombre = "11:20 - 12:20"
                        },
                        new
                        {
                            Id = 6,
                            HoraFin = new TimeSpan(0, 13, 25, 0, 0),
                            HoraInicio = new TimeSpan(0, 12, 25, 0, 0),
                            Nombre = "12:25 - 13:25"
                        },
                        new
                        {
                            Id = 7,
                            HoraFin = new TimeSpan(0, 14, 30, 0, 0),
                            HoraInicio = new TimeSpan(0, 13, 30, 0, 0),
                            Nombre = "13:30 - 14:30"
                        },
                        new
                        {
                            Id = 8,
                            HoraFin = new TimeSpan(0, 15, 35, 0, 0),
                            HoraInicio = new TimeSpan(0, 14, 35, 0, 0),
                            Nombre = "14:35 - 15:35"
                        },
                        new
                        {
                            Id = 9,
                            HoraFin = new TimeSpan(0, 16, 40, 0, 0),
                            HoraInicio = new TimeSpan(0, 15, 40, 0, 0),
                            Nombre = "15:40 - 16:40"
                        },
                        new
                        {
                            Id = 10,
                            HoraFin = new TimeSpan(0, 17, 45, 0, 0),
                            HoraInicio = new TimeSpan(0, 16, 45, 0, 0),
                            Nombre = "16:45 - 17:45"
                        },
                        new
                        {
                            Id = 11,
                            HoraFin = new TimeSpan(0, 18, 50, 0, 0),
                            HoraInicio = new TimeSpan(0, 17, 50, 0, 0),
                            Nombre = "17:50 - 18:50"
                        });
                });

            modelBuilder.Entity("AppReservasBio.Models.Reactivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnidadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadId");

                    b.ToTable("Reactivos");
                });

            modelBuilder.Entity("AppReservasBio.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Actividad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aprobado")
                        .HasColumnType("bit");

                    b.Property<string>("ConsideracionesEspeciales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocenteId")
                        .HasColumnType("int");

                    b.Property<bool>("EsMantenimiento")
                        .HasColumnType("bit");

                    b.Property<string>("EvidenciaCorreoRuta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("HoraFinMantenimiento")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HoraInicioMantenimiento")
                        .HasColumnType("time");

                    b.Property<int>("LaboratorioId")
                        .HasColumnType("int");

                    b.Property<string>("Materia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModuloHorarioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreProyecto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.HasIndex("LaboratorioId");

                    b.HasIndex("ModuloHorarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("AppReservasBio.Models.ReservaReactivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ReactivoId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReactivoId");

                    b.HasIndex("ReservaId");

                    b.ToTable("ReservaReactivos");
                });

            modelBuilder.Entity("AppReservasBio.Models.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("AppReservasBio.Models.UsuarioAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsuariosAdmin");
                });

            modelBuilder.Entity("EquipoReserva", b =>
                {
                    b.Property<int>("EquiposId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("EquiposId", "ReservaId");

                    b.HasIndex("ReservaId");

                    b.ToTable("EquipoReserva");
                });

            modelBuilder.Entity("AppReservasBio.Models.Estudiante", b =>
                {
                    b.HasOne("AppReservasBio.Models.Reserva", "Reserva")
                        .WithMany("Estudiantes")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("AppReservasBio.Models.Reactivo", b =>
                {
                    b.HasOne("AppReservasBio.Models.Unidad", null)
                        .WithMany("Reactivos")
                        .HasForeignKey("UnidadId");
                });

            modelBuilder.Entity("AppReservasBio.Models.Reserva", b =>
                {
                    b.HasOne("AppReservasBio.Models.Docente", "Docente")
                        .WithMany("Reservas")
                        .HasForeignKey("DocenteId");

                    b.HasOne("AppReservasBio.Models.Laboratorio", "Laboratorio")
                        .WithMany("Reservas")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppReservasBio.Models.ModuloHorario", "ModuloHorario")
                        .WithMany("Reservas")
                        .HasForeignKey("ModuloHorarioId");

                    b.Navigation("Docente");

                    b.Navigation("Laboratorio");

                    b.Navigation("ModuloHorario");
                });

            modelBuilder.Entity("AppReservasBio.Models.ReservaReactivo", b =>
                {
                    b.HasOne("AppReservasBio.Models.Reactivo", "Reactivo")
                        .WithMany()
                        .HasForeignKey("ReactivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppReservasBio.Models.Reserva", "Reserva")
                        .WithMany("ReservaReactivos")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reactivo");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("EquipoReserva", b =>
                {
                    b.HasOne("AppReservasBio.Models.Equipo", null)
                        .WithMany()
                        .HasForeignKey("EquiposId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppReservasBio.Models.Reserva", null)
                        .WithMany()
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppReservasBio.Models.Docente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AppReservasBio.Models.Laboratorio", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AppReservasBio.Models.ModuloHorario", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AppReservasBio.Models.Reserva", b =>
                {
                    b.Navigation("Estudiantes");

                    b.Navigation("ReservaReactivos");
                });

            modelBuilder.Entity("AppReservasBio.Models.Unidad", b =>
                {
                    b.Navigation("Reactivos");
                });
#pragma warning restore 612, 618
        }
    }
}
